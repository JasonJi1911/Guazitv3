<?php
namespace admin\models\video;

use common\helpers\RedisKey;
use common\helpers\Tool;
use yii\helpers\ArrayHelper;

class VideoCategory extends \common\models\video\VideoCategory
{
    public function getVideoCount()
    {
        return Video::find()->where(['like', 'category_ids', $this->id])->limit(1000)->count();
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'display_order'], 'required'],
            [['channel_id', 'created_at', 'updated_at', 'deleted_at'], 'integer'],
            [['title'], 'string', 'max' => 32],
            [['description'], 'string', 'max' => 64],
            [['display_order'], 'integer', 'min' => DISPLAY_ORDER_MIN, 'max' => DISPLAY_ORDER_MAX],
            [['title'], 'trim']
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'channel_id' => 'Channel ID',
            'title' => '分类名',
            'description' => '分类描述',
            'display_order' => '排序',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
            'deleted_at' => 'Deleted At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     *  关联频道
     */
    public function getChannel()
    {
        return $this->hasOne(VideoChannel::className(), ['id' => 'channel_id']);
    }

    public function getChannelList() {
        return ArrayHelper::map(VideoChannel::find()->orderBy('display_order desc')->all(), 'id', 'channel_name');
    }

    public function afterSave($insert, $changedAttributes)
    {
        //清理缓存
        Tool::clearCache(RedisKey::videoCategory());
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}
