<?php
namespace admin\models;

use admin\models\permission\Role;
use common\helpers\Tool;
use common\models\traits\StatusToggleInterface;
use common\models\traits\StatusToggleTrait;
use Yii;
use yii\base\NotSupportedException;
use yii\web\IdentityInterface;

class Admin extends \common\models\Admin implements IdentityInterface, StatusToggleInterface
{
    public $password; // 密码

    use StatusToggleTrait;


    // 场景常量
    const SCENARIO_LOGIN  = 'login';    // 登录
    const SCENARIO_CREATE = 'create';   // 创建或更新


    /**
     * @var array 状态
     */
    public static $statuses = [
        self::STATUS_ENABLED  => '启用',
        self::STATUS_DISABLED => '禁用',
    ];


    public function beforeSave($insert)
    {
        // 如果是管理员,并且状态不对
        if ($this->id == 1 && $this->status != self::STATUS_ENABLED) {
            return false;
        }

        if ($this->isNewRecord) {
            $this->auth_key = Tool::getRandKey();
        }

        return parent::beforeSave($insert);
    }

    /**
     * {@inheritdoc}
     */
    public static function findIdentity($id)
    {
        return static::findOne(['id' => $id, 'status' => self::STATUS_ENABLED]);
    }

    /**
     * {@inheritdoc}
     */
    public static function findIdentityByAccessToken($token, $type = null)
    {
        throw new NotSupportedException('"findIdentityByAccessToken" is not implemented.');
    }

    /**
     * Finds user by username
     *
     * @param string $username
     * @return static|null
     */
    public static function findByUsername($username)
    {
        return static::findOne(['username' => $username, 'status' => self::STATUS_ENABLED]);
    }

    public function setPassword($password)
    {
        $this->password_hash = Yii::$app->security->generatePasswordHash($password);
    }
    
    /**
     * {@inheritdoc}
     */
    public function getId()
    {
        return $this->getPrimaryKey();
    }

    /**
     * {@inheritdoc}
     */
    public function getAuthKey()
    {
        return $this->auth_key;
    }

    /**
     * {@inheritdoc}
     */
    public function validateAuthKey($authKey)
    {
        return $this->getAuthKey() === $authKey;
    }

    /**
     * Validates password
     *
     * @param string $password password to validate
     * @return bool if password provided is valid for current user
     */
    public function validatePassword($password)
    {
        return Yii::$app->security->validatePassword($password, $this->password_hash);
    }
    
    /**
     * 关联角色
     */
    public function getRole()
    {
        return $this->hasOne(Role::className(), ['id' => 'role_id']);
    }


    public function beforeDelete()
    {
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        $rules = [
            [['username', 'password_hash'], 'required'],
            [['role_id', 'status', 'created_at', 'updated_at', 'deleted_at'], 'integer'],
            [['username'], 'string', 'max' => 15],
            [['auth_key', 'login_key'], 'string', 'max' => 32],
            [['password_hash'], 'string', 'max' => 255],
            ['password', 'string', 'length' => [6, 18]]
        ];

        // 新增时密码是必须的，编辑时是可选的,用户名也是唯一的
        if ($this->isNewRecord) {
            $rules[] = [['password_hash'], 'required'];
            $rules[] = [['username'], 'unique'];
        }

        return $rules;
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => '管理员ID',
            'username' => '用户名',
            'password' => '密码',
            'auth_key' => '认证KEY',
            'password_hash' => '密码',
            'role_id' => '角色ID',
            'login_key' => '免密登录key',
            'status' => '状态',
            'created_at' => '创建时间',
            'updated_at' => '更新时间',
            'deleted_at' => '删除时间',
        ];
    }
}
